// <auto-generated />
using System;
using CarpetHandyMan.infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarpetHandyMan.Api.Migrations
{
    [DbContext(typeof(CarpetContext))]
    [Migration("20210422121655_addingImageStringToCarpet")]
    partial class addingImageStringToCarpet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Carpet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SquareYardPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Carpet");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Closet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("RoomId1");

                    b.ToTable("Closets");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Installer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RetailerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SquareYardPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RetailerId");

                    b.ToTable("Installers");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarpetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstallerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RetailerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("InstallerId")
                        .IsUnique();

                    b.HasIndex("RetailerId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Retailer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarpetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("BuildingId1");

                    b.HasIndex("CarpetId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Stair", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarpetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StaircaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StaircaseId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarpetId");

                    b.HasIndex("StaircaseId");

                    b.HasIndex("StaircaseId1");

                    b.ToTable("Stairs");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Staircase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BuildingId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarpetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCurved")
                        .HasColumnType("bit");

                    b.Property<int>("StairCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("BuildingId1");

                    b.HasIndex("CarpetId");

                    b.ToTable("Staircases");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Carpet", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Closet", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpetHandyMan.Core.Objects.Room", null)
                        .WithMany("Closets")
                        .HasForeignKey("RoomId1");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Customer", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Building", null)
                        .WithOne()
                        .HasForeignKey("CarpetHandyMan.Core.Objects.Customer", "BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Installer", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Retailer", null)
                        .WithMany("Installers")
                        .HasForeignKey("RetailerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Order", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Customer", null)
                        .WithOne()
                        .HasForeignKey("CarpetHandyMan.Core.Objects.Order", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpetHandyMan.Core.Objects.Installer", null)
                        .WithOne()
                        .HasForeignKey("CarpetHandyMan.Core.Objects.Order", "InstallerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpetHandyMan.Core.Objects.Retailer", null)
                        .WithOne()
                        .HasForeignKey("CarpetHandyMan.Core.Objects.Order", "RetailerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Room", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpetHandyMan.Core.Objects.Building", null)
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId1");

                    b.HasOne("CarpetHandyMan.Core.Objects.Carpet", null)
                        .WithMany()
                        .HasForeignKey("CarpetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Stair", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Carpet", null)
                        .WithMany()
                        .HasForeignKey("CarpetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpetHandyMan.Core.Objects.Staircase", null)
                        .WithMany()
                        .HasForeignKey("StaircaseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarpetHandyMan.Core.Objects.Staircase", null)
                        .WithMany("Stairs")
                        .HasForeignKey("StaircaseId1");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Staircase", b =>
                {
                    b.HasOne("CarpetHandyMan.Core.Objects.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpetHandyMan.Core.Objects.Building", null)
                        .WithMany("Staircases")
                        .HasForeignKey("BuildingId1");

                    b.HasOne("CarpetHandyMan.Core.Objects.Carpet", null)
                        .WithMany()
                        .HasForeignKey("CarpetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Building", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Staircases");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Retailer", b =>
                {
                    b.Navigation("Installers");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Room", b =>
                {
                    b.Navigation("Closets");
                });

            modelBuilder.Entity("CarpetHandyMan.Core.Objects.Staircase", b =>
                {
                    b.Navigation("Stairs");
                });
#pragma warning restore 612, 618
        }
    }
}
